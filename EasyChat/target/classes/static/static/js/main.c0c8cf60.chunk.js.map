{"version":3,"sources":["LoginForm.js","CreateModal.js","ManageModal.js","ChatsList.js","ChatMessages.js","ChatSend.js","ChatScreen.js","App.js","serviceWorker.js","index.js"],"names":["cookies","Cookies","LoginForm","state","username","password","wrongAuth","handleSubmit","bind","value","this","setState","evt","preventDefault","postUrl","self","window","location","href","split","hostname","axios","post","then","response","set","reload","catch","error","console","log","className","Form","onSubmit","props","Group","controlId","Label","Control","type","placeholder","onChange","handleUser","target","handlePw","path","Alert","variant","style","marginBottom","to","Button","Component","CreateModal","wrongUser","wrongGroup","newChatValue","newGroupValue","newUser1Value","newUser2Value","createNewChat","createNewGroup","name","members","params","sessionId","sid","data","success","Modal","show","onHide","handler","Header","closeButton","Title","Body","InputGroup","FormControl","aria-label","handlerChatValue","Append","block","ManageModal","newUser","getMembers","addToGroup","prevPops","chatId","get","map","member","i","key","handlerNewUser","disabled","isAdmin","ChatList","chatList","showCreate","showManage","selectedChat","managedChat","handleShowCreate","handleShowManage","handleLogout","getChat","setInterval","some","chat","length","forEach","oldChat","newState","Object","assign","setChat","ButtonGroup","vertical","onClick","changeChat","icon","faTools","ChatMessages","messageList","ref","createRef","iid","lastTimeRequested","isWaiting","stopRefresh","getMessages","startRefresh","current","scrollTop","scrollHeight","clearInterval","lastMsgTime","lastMsgTimestamp","timestamp","Date","getTime","from","n","concat","ListGroup","message","sender","Card","bg","text","ChatSend","handleChange","sendMessage","textToSend","trim","alert","size","as","rows","onKeyPress","which","form","dispatchEvent","Event","cancelable","ChatScreen","isLogged","remove","id","Container","Row","Col","md","ChatsList","App","undefined","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0c8cf60.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { Button, Form, Alert } from \"react-bootstrap\";\nimport {Link, Switch, Route, BrowserRouter as Router} from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './login.css';\n\nconst cookies = new Cookies();\n\nclass LoginForm extends Component {\n  constructor(){\n    //Controllare se lo stato serve poi\n    super();\n    this.state = {\n      username: '',\n      password: '',\n      wrongAuth: 'hidden',\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handlePw(value){\n    this.setState({\n      password: value\n    });\n  }\n\n  handleUser(value){\n    this.setState({\n      username: value\n    });\n  }\n\n  handleSubmit(evt){\n    evt.preventDefault();\n    var self = this;\n    var postUrl;\n    this.setState({\n      wrongAuth: 'hidden',\n    }) \n    var path = window.location.href.split('/')[3]\n    if(path !== 'register'){\n      postUrl = 'http://'+window.location.hostname+':8080/api/v1/auth/login';\n    } else {\n      postUrl = 'http://'+window.location.hostname+':8080/api/v1/users';\n    }\n\n    axios.post(postUrl, {\n      username: this.state.username,\n      password: this.state.password\n    })\n    .then(function (response) {\n        if(response['data']['success']){\n          self.setState({\n            wrongAuth: 'hidden',\n          })\n          cookies.set('sessionId', response['data']['sessionId']);\n          cookies.set('username', self.state.username);\n          window.location.reload();\n        } else {\n          self.setState({\n            wrongAuth: '',\n          })        \n        }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Login\">\n        <Router>\n          <Form onSubmit={(evt) => this.handleSubmit(evt, this.props)}>\n            <h2>EasyChat</h2>\n            <Form.Group controlId=\"formUsername\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\"placeholder=\"Enter username\"\n                            value={this.state.username} onChange={(evt) => this.handleUser(evt.target.value)}/>\n            </Form.Group>\n\n            <Form.Group controlId=\"formPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\"\n                            value={this.state.password} onChange={(evt) => this.handlePw(evt.target.value)} />\n            </Form.Group>\n\n            <Switch>\n              <Route path=\"/register\">\n                <Alert variant=\"danger\"\n                  style={{ marginBottom: '20px'}}\n                  className={this.state.wrongAuth ? 'hidden' : ''}>Username already taken</Alert>\n                <Link to=\"/\">\n                  <Button variant=\"link\">Log in</Button>\n                </Link>\n                <Button variant=\"primary\" type=\"submit\">\n                  Sign on!\n                </Button>\n              </Route>\n              <Route path=\"/\">\n                <Alert variant=\"danger\"\n                  style={{ marginBottom: '20px'}}\n                  className={this.state.wrongAuth ? 'hidden' : ''}>Wrong username or password</Alert>\n                <Link to=\"/register\">\n                  <Button variant=\"link\">Sign on!</Button>\n                </Link>\n                <Button variant=\"primary\" type=\"submit\">\n                  Log in!\n                </Button>\n              </Route>\n            </Switch>\n          </Form>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, {Component} from 'react'\nimport {Modal, FormControl, Form, Alert, Button, InputGroup} from 'react-bootstrap'\nimport axios from \"axios\"\n\nclass CreateModal extends Component {\n    constructor(){\n        super()\n        this.state = {\n            wrongUser: 'hidden',\n            wrongGroup: 'hidden',\n            newChatValue: '',\n            newGroupValue: '',\n            newUser1Value: '',\n            newUser2Value: '',\n        }\n\n        this.createNewChat = this.createNewChat.bind(this)\n        this.createNewGroup = this.createNewGroup.bind(this)\n    }\n\n    handlerChatValue(value){\n        this.setState({\n            newChatValue: value,\n        })\n    }\n\n    createNewChat(evt){\n        evt.preventDefault();\n        var self = this;\n        axios.post(\"http://\"+window.location.hostname+\":8080/api/v1/chats\", {\n            name: 'null',\n            members: [this.state.newChatValue]\n        }, { params: {\n            sessionId: this.props.sid,\n        }})\n        .then(function(response){\n            if(!response.data.success){\n                self.setState({\n                    wrongUser: '',\n                })\n            } else {\n                window.location.reload();\n            }\n        })\n        .catch(function(error){\n            console.log(error);\n        })\n    }\n\n    createNewGroup(evt){\n        evt.preventDefault();\n        var self = this;\n        axios.post(\"http://\"+window.location.hostname+\":8080/api/v1/chats\", {\n            name: this.state.newGroupValue,\n            members: [this.state.newUser1Value, this.state.newUser2Value]\n        }, { params: {\n            sessionId: this.props.sid,\n        }})\n        .then(function(response){\n            if(!response.data.success){\n                self.setState({\n                    wrongGroup: '',\n                })\n            } else {\n                window.location.reload();\n            }\n        })\n        .catch(function(error){\n            console.log(error);\n        })\n    }\n\n    render(){\n        return (\n            <Modal show={this.props.show} onHide={this.props.handler}>\n                <Modal.Header closeButton>\n                <Modal.Title>Add chat</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                <Alert variant=\"danger\" className={this.state.wrongUser}>\n                No user found\n                </Alert>\n                <Form onSubmit={this.createNewChat}>\n                    <InputGroup>\n                        <FormControl  aria-label=\"Add\"\n                                    placeholder=\"Who do you want to chat to?\"\n                                    value={this.state.newChatValue}\n                                    onChange={(evt) => this.handlerChatValue(evt.target.value)}></FormControl>\n                        <InputGroup.Append>\n                            <Button type=\"submit\"\n                                    variant=\"outline-success\">Add</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form>\n                </Modal.Body>\n                <Modal.Header>\n                <Modal.Title>Create group</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                <Form onSubmit={this.createNewGroup}>\n                    <Alert variant=\"danger\" className={this.state.wrongGroup}>\n                    Type 2 valid usernames!\n                    </Alert>\n                    <Form.Group>\n                    <Form.Control   aria-label=\"Create group\"\n                                    placeholder=\"Name of your group\"\n                                    onChange={(evt) => {\n                                        this.setState({\n                                            newGroupValue: evt.target.value\n                                    })}}></Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                    <Form.Control   placeholder=\"User to add\"\n                                    onChange={(evt) => {\n                                        this.setState({\n                                            newUser1Value: evt.target.value\n                                    })}}></Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                    <Form.Control   placeholder=\"User to add\"\n                                    onChange={(evt) => {\n                                        this.setState({\n                                            newUser2Value: evt.target.value\n                                    })}}></Form.Control>\n                    </Form.Group>\n                    <Button block type=\"submit\" variant=\"outline-success\">Add</Button>\n                </Form>\n                </Modal.Body>\n            </Modal>\n    )}\n}\n\nexport default CreateModal;","import React, {Component} from 'react'\nimport {Modal, Form, Button, Alert} from 'react-bootstrap'\nimport axios from 'axios'\n\nclass ManageModal extends Component{\n\n    constructor(){\n        super();\n        this.state = {\n            members: [],\n            wrongUser: 'hidden',\n            newUser: '',\n        }\n\n        this.getMembers = this.getMembers.bind(this)\n        this.addToGroup = this.addToGroup.bind(this)\n    }\n\n    componentDidUpdate(prevPops){\n        if(this.props.chatId !== prevPops.chatId || this.props.show !== prevPops.show){\n            this.getMembers();\n        }\n    }\n\n    getMembers(){\n        if(this.props.chatId === -1){\n            return\n        }\n        var self = this;\n        axios.get('http://'+window.location.hostname+':8080/api/v1/chat/'+this.props.chatId, {params : {\n            sessionId: this.props.sid,\n        }})\n        .then(function(response){\n            if(response.data){\n                self.setState({\n                    members: response.data.members\n                })\n            }\n        })\n        .catch(function(error){\n            console.log(error);\n        })\n    }\n\n    handlerNewUser(evt){\n        this.setState({\n            newUser: evt.target.value,\n        })\n    }\n\n    addToGroup(evt){\n        if(this.props.chatId === -1){\n            return\n        }\n        var self = this;\n        evt.preventDefault();\n        console.log(this.state)\n        axios.post('http://'+window.location.hostname+':8080/api/v1/chat/'+this.props.chatId+'/members', {\n            username: this.state.newUser,\n        },{ params: {\n            sessionId: this.props.sid,\n        }})\n        .then(function(response){\n            if(response.data.success){\n                self.props.handler();\n                self.setState({\n                    wrongUser: 'hidden',\n                    newUser: '',\n                })\n            } else {\n                self.setState({\n                    wrongUser: '',\n                })\n            }\n        })\n        .catch(function(error){\n            console.log(error);\n        })\n    }\n\n    render(){\n        return (\n            <Modal show={this.props.show} onHide={this.props.handler}>\n            <Modal.Header closeButton>\n            <Modal.Title>Users</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            {   this.state.members.map((member, i) => {\n                return <p key={i}>{member.username}</p>\n                })\n            }\n            </Modal.Body>\n            <Modal.Header>\n            <Modal.Title>Add user</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Form onSubmit={this.addToGroup}>\n                <Form.Group>\n                <Alert variant=\"danger\" className={this.state.wrongUser}>\n                    Wrong username\n                </Alert>\n                <Form.Control   value={this.state.newUser}\n                                onChange={(evt) => this.handlerNewUser(evt)}\n                                placeholder=\"User to add\"></Form.Control>\n                </Form.Group>\n                <Button block   disabled={!this.props.isAdmin}\n                                type=\"submit\"\n                                variant={this.props.isAdmin ? 'outline-success' : 'secondary'}>\n                                    Add\n                </Button>\n            </Form>\n            </Modal.Body>\n            </Modal>\n        )\n    }\n}\n\nexport default ManageModal;","import React, {Component} from 'react';\nimport { ButtonGroup, Button, InputGroup } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport CreateModal from './CreateModal.js'\nimport ManageModal from './ManageModal.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTools } from '@fortawesome/free-solid-svg-icons'\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\nclass ChatList extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      chatList: [],\n      showCreate: false,\n      showManage: false\n    }\n    this.selectedChat = -1;\n    this.managedChat = -1;\n    this.handleShowCreate = this.handleShowCreate.bind(this);\n    this.handleShowManage = this.handleShowManage.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  componentDidMount(){\n    this.getChat();\n    window.setInterval(()=>{\n      this.getChat();\n    }, 1000)\n  }\n\n  getChat(){\n    var self = this;\n    axios.get('http://'+window.location.hostname+':8080/api/v1/chats',{ params: {\n      sessionId: this.props.sid,\n    }})\n    .then(function (response) {\n        response.data.some((chat, i) => {\n            //we have to find a better way\n            if(self.state.chatList.length > 0){\n              self.state.chatList.forEach((oldChat) => {\n                if(oldChat.chatId === chat.chatId){\n                  chat.variant = oldChat.variant\n                  if(chat.variant === \"warning\"){\n                    self.selectedChat = i;\n                  }\n                  return true;\n                }\n              })\n            } else {\n              chat.variant = \"light\"\n            }\n            return false;\n        })\n        self.setState({\n          chatList: response.data,\n        })\n    })\n    .catch(function (error) {\n      console.log(error);\n    }); \n  }\n\n  changeChat(chatId, i){\n    let newState = Object.assign({}, this.state);\n    if(this.selectedChat !== -1)\n      newState.chatList[this.selectedChat].variant = \"light\";\n    newState.chatList[i].variant = \"warning\";\n    this.selectedChat = i;\n    this.setState(newState);\n    this.props.setChat(chatId);\n  }\n\n  handleShowCreate(){\n    let newState = Object.assign({}, this.state);\n    newState.showCreate = !newState.showCreate;\n    this.setState(newState);\n  }\n\n  handleShowManage(){\n    let newState = Object.assign({}, this.state);\n    newState.showManage = !newState.showManage;\n    this.setState(newState);\n  }\n\n  handleLogout(){\n    axios.post('http://'+window.location.hostname+':8080/api/v1/auth/logout', null, {params: {\n      sessionId: this.props.sid\n    }})\n    .then(function(response){\n      //if success or not, the user should relog\n      //success could be false if sid is expired\n      cookies.set('sessionId', '');\n      window.location.reload();\n    })\n    .catch(function(error){\n      console.log(error);\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"chatsList\">\n        <ButtonGroup vertical>\n          <Button className=\"chatLabel border logout\"\n                  variant=\"outline-danger\"\n                  onClick={this.handleLogout}>Logout\n          </Button>\n          <Button className=\"chatLabel border addChat\"\n                  variant=\"outline-success\"\n                  onClick={this.handleShowCreate}>+ Create\n          </Button>\n        </ButtonGroup>\n          {\n            this.state.chatList.map((chat, i) => {\n                if(chat.members.length < 3){\n                  return <Button className=\"chatLabel border\"\n                        variant={chat.variant}\n                        key={chat.chatId}\n                        onClick={() => this.changeChat(chat.chatId, i)}>\n                             {\n                               chat.members.map((member) =>\n                                  member.username !== this.props.username ? (\n                                    member.username\n                                  ) : null\n                              )}\n                        </Button>\n                } else {\n                  return (\n                    <InputGroup className=\"border\" key={chat.chatId}>\n                        <Button variant={chat.variant}\n                                className=\"groupLabel\"\n                                onClick={() => this.changeChat(chat.chatId, i)}>\n                                  {chat.name}\n                        </Button>\n                      <InputGroup.Append className=\"groupLabelManage\">\n                        <Button variant={chat.variant}\n                                onClick={(evt) => {\n                                  this.managedChat = chat.chatId;\n                                  this.isAdmin = chat.isAdmin;\n                                  this.handleShowManage();\n                                }}>\n                                <FontAwesomeIcon icon={faTools} />\n                        </Button>\n                      </InputGroup.Append>\n                    </InputGroup>\n                  )\n                }\n            })\n          }\n\n        <CreateModal sid={this.props.sid} handler={this.handleShowCreate} show={this.state.showCreate} />\n        <ManageModal sid={this.props.sid}\n                     handler={this.handleShowManage}\n                     isAdmin={this.isAdmin}\n                     show={this.state.showManage}\n                     chatId={this.managedChat} />\n      </div>\n    );\n  }\n}\n\nexport default ChatList;\n","import React, {Component, createRef} from 'react';\nimport {ListGroup, Card, Alert} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\nclass ChatMessages extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n      messageList: [],\n    };\n    this.ref = createRef();\n    this.iid = 0;\n    this.lastTimeRequested = -1;\n    this.isWaiting = false;\n  }\n\n  componentDidUpdate(prevPops){\n    if(this.props.chatId !== prevPops.chatId){\n      this.setState({\n        messageList: [],\n      });\n      this.stopRefresh();\n      this.getMessages(this.props.chatId, this.props.sid, 0, 0, 0);\n      this.startRefresh(this.props.chatId, this.props.sid);\n    }\n    if(prevPops.chatId === 0)\n      this.ref.current.scrollTop = this.ref.current.scrollHeight;\n  }\n\n  stopRefresh(){\n    window.clearInterval(this.iid);\n  }\n\n  startRefresh(chat, sid){\n    var self = this;\n    this.iid = window.setInterval(function() {\n      var lastMsgTime = 0;\n      if (self.state.messageList.length > 0){\n        var lastMsgTimestamp = self.state.messageList[self.state.messageList.length-1].timestamp;\n        lastMsgTime = new Date(lastMsgTimestamp).getTime();\n      }\n      self.getMessages(chat, sid, lastMsgTime, 0, 0)\n    }, 500);\n  }\n\n  getMessages(chat, sid, from, to, n){\n    if(!this.isWaiting || this.lastTimeRequested !== from){\n      this.isWaiting = true;\n      this.lastTimeRequested = from;\n      var self = this\n      axios.get('http://'+window.location.hostname+':8080/api/v1/chat/'+chat+'/messages',{ params: {\n        sessionId: sid,\n        from: from,\n        to: to,\n        n: n\n      }})\n      .then(function (response) {\n        self.setState({\n          messageList: self.state.messageList.concat(response.data),\n        })\n        if(response.data.length > 0){\n          self.ref.current.scrollTop = self.ref.current.scrollHeight;\n        }\n        self.isWaiting = false;\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"chatMessages\" ref={this.ref}>\n          {\n            this.state.messageList.length === 0 ? (\n            <Alert variant=\"light\" className=\"empty-chat\"> Nothing to show: select a chat to start</Alert>\n          ) : (\n            <ListGroup  className=\"messageList\">\n              {this.state.messageList.map((message, i) =>\n                this.props.username !== message.sender.username ? (\n                  <div key={i}><Card bg=\"info\" className=\"message\">{message.text}<p className=\"text-right timestamp\">{message.timestamp}</p></Card>\n                  <p className=\"text-left\">{message.sender.username}</p></div>\n                ) : (\n                  <div key={i}><Card bg=\"success\" className=\"message\"><p className=\"text-right\">{message.text}</p><p className=\"text-right timestamp\">{message.timestamp}</p></Card>\n                  <p className=\"text-right\">You</p></div>\n                )\n              )}\n            </ListGroup>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default ChatMessages;\n","import React, {Component} from 'react';\nimport {Button, InputGroup, FormControl, Form} from 'react-bootstrap'\nimport axios from 'axios';\n\nclass ChatSend extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            value: \"\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.sendMessage = this.sendMessage.bind(this)\n    }\n\n    sendMessage(evt){\n        evt.preventDefault();\n        var textToSend = this.state.value.trim();\n        if(textToSend.length < 1){\n            return\n        }\n\n        axios.post('http://'+window.location.hostname+':8080/api/v1/chat/'+this.props.chatId+'/messages', {\n            text: textToSend\n        },{ params: {\n            sessionId: this.props.sid\n        }})\n        .then(function(response){\n            if(!response.data.success){\n                alert('Message not send');\n            }\n        })\n        .catch(function(error){\n            console.log(error);\n        })\n        this.setState({ value: '' })\n    }\n\n    handleChange(evt){\n        this.setState({\n            value: evt.target.value\n        })\n    }\n\n    render(){\n        return (\n            <div className=\"sendContainer\">\n                <Form onSubmit={this.sendMessage}>\n                {\n                    this.props.chatId === 0 ? null : (\n                        <InputGroup size=\"lg\">\n                            <FormControl    as=\"textarea\"\n                                            rows=\"2\"\n                                            aria-label=\"Send\"\n                                            placeholder=\"Write your message!\"\n                                            value={this.state.value}\n                                            onKeyPress={(evt) => {\n                                                    if(evt.which===13){\n                                                        evt.preventDefault();\n                                                        evt.target.form.dispatchEvent(new Event(\"submit\", {cancelable: true}));\n                                                    }\n                                                }\n                                            }\n                                            onChange={this.handleChange}/>\n                            <InputGroup.Append>\n                                <Button type=\"submit\" variant=\"primary\">Send</Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    )}\n                    </Form>\n            </div>\n        )\n    }\n}\n\nexport default ChatSend;","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './chat.css';\nimport ChatsList from './ChatsList.js'\nimport ChatMessages from './ChatMessages.js'\nimport ChatSend from './ChatSend.js'\nimport {Container, Row, Col} from 'react-bootstrap';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\nclass ChatScreen extends Component {\n\n  constructor(){\n    super()\n    this.state = {\n      chatId: 0,\n    }\n\n    this.username = cookies.get('username');\n    this.setChat = this.setChat.bind(this)\n  }\n\n  componentDidMount(){\n    this.isLogged();\n  }\n\n  isLogged(){\n    axios.get('http://'+window.location.hostname+':8080/api/v1/auth/check', { params: {\n      sessionId: this.props.sid,\n    }})\n    .then(function (response) {\n        if(!response['data']['success']){\n          cookies.remove('sessionId');\n          window.location.reload();\n        }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });  \n  }\n\n  setChat(id){\n    this.setState({\n      chatId: id,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"chat border\">\n        <Container>\n          <Row>\n            <Col md={4}>\n              <ChatsList className=\"chatsList\"  username={this.username} sid={this.props.sid} setChat={this.setChat}/>\n            </Col>\n            <Col md={8}>\n                <ChatMessages username={this.username} sid={this.props.sid} chatId={this.state.chatId}/>\n                <ChatSend sid={this.props.sid} chatId={this.state.chatId}/>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ChatScreen;\n","import React, { Component } from 'react';\nimport LoginForm from './LoginForm.js'\nimport ChatScreen from './ChatScreen.js'\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      sid: cookies.get('sessionId'),\n    }\n  }\n  \n  render(){\n    return (\n          <div className=\"container\">\n            {this.state.sid !== undefined ? (\n              <ChatScreen sid={this.state.sid} />\n            ) : (\n              <LoginForm />\n            )}\n          </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}